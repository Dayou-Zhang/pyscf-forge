import pyscf
from pyscf import scf, gto, mcscf, lib
import numpy as np
#from pyscf.fci import csf_solver
from pyscf.mcdcft import mcdcft, dcfnal

'''
This input file performs a potential energy scan of H2 using cBLYP-2 (density coherence functional
with reparameterization). It will read the checkpoint files generated by example 01.
'''

xc_preset = dict(args=dict(f=dcfnal.f_v1, negative_rho=True), display_name='cBLYP-2')

def run(chkfile):
    mol = lib.chkfile.load_mol(chkfile)
    mol.verbose = 3
    mc = mcdcft.DCFT_base(mol, grids_level=6)
    mc.load_mcdcft_chk(chkfile)
    mc.recalculate_with_xc('0.92 * B88 , 1.59 * LYP',
                            xc_preset=xc_preset, dump_chk=chkfile)
    return mc


def scan():
    method = 'MC-DCFT'

    rrange = np.arange(0.5, 6.1, 0.1)

    for r in rrange:
        chkfile = f'{method}_{r:02.2f}.chk'
        run(chkfile)


if __name__ == '__main__':
    lib.num_threads(2)
    scan()

